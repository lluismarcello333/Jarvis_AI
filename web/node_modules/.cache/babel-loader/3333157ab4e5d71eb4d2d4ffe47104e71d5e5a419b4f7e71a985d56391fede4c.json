{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/App.jsx\",\n  _s = $RefreshSig$();\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeRequest } from \"./api/api\";\nimport SideMenu from './components/SideMenu/SideMenu';\nimport Avatar from \"./assets/staticJarvis.png\";\nimport ChatMessage from \"./components/ChatMessage/ChatMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      renderSmallImages();\n    }, 10000); // Defina o intervalo de tempo para renderizar as imagens (em milissegundos)\n\n    return () => clearInterval(intervalId);\n  }, []); // Executa somente uma vez quando o componente é montado\n\n  function renderSmallImages() {\n    const smallImgSize = 150; // Tamanho das imagens menores\n    const center = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n    }; // Coordenadas do centro da janela\n\n    // Adiciona as imagens menores ao redor da imagem maior\n    const smallImgPositions = [\n    // Canto superior esquerdo\n    {\n      x: center.x - 350 - smallImgSize,\n      y: center.y - 200 - smallImgSize\n    },\n    // Canto superior direito\n    {\n      x: center.x + 590 - smallImgSize,\n      y: center.y - 120 - smallImgSize\n    },\n    // Canto inferior direito\n    {\n      x: center.x + 650 - smallImgSize,\n      y: center.y + 180\n    },\n    // Canto inferior esquerdo\n    {\n      x: center.x - 420 - smallImgSize,\n      y: center.y + 260\n    }];\n    const smallImages = smallImgPositions.map((position, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Avatar,\n      className: \"small-image\",\n      style: {\n        width: `${smallImgSize}px`,\n        height: `${smallImgSize}px`,\n        left: `${position.x}px`,\n        top: `${position.y}px`\n      },\n      alt: \"Small Avatar\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this));\n    return smallImages;\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split(\"\\n\").map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 56\n    }, this));\n    setChatLog([...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }, {\n      user: \"gpt\",\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-container\",\n      children: [renderSmallImages(), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Avatar,\n        className: \"avatar-image\",\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jd2kXKrSrrgNJ5KqhP8d1FJviSo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","makeRequest","SideMenu","Avatar","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatLog","setChatLog","user","message","intervalId","setInterval","renderSmallImages","clearInterval","smallImgSize","center","x","window","innerWidth","y","innerHeight","smallImgPositions","smallImages","map","position","index","src","className","style","width","height","left","top","alt","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","e","preventDefault","response","prompt","data","split","line","children","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/App.jsx"],"sourcesContent":["import \"./styles/App.css\";\nimport \"./styles/reset.css\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { makeRequest } from \"./api/api\";\nimport SideMenu from './components/SideMenu/SideMenu'\nimport Avatar from \"./assets/staticJarvis.png\";\nimport ChatMessage from \"./components/ChatMessage/ChatMessage\";\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\")\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message:\"Como posso te ajudar hoje?\"\n  }]);\n\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      renderSmallImages();\n    }, 10000); // Defina o intervalo de tempo para renderizar as imagens (em milissegundos)\n\n    return () => clearInterval(intervalId);\n  }, []); // Executa somente uma vez quando o componente é montado\n\n  function renderSmallImages() {\n    const smallImgSize = 150; // Tamanho das imagens menores\n    const center = { x: window.innerWidth / 2, y: window.innerHeight / 2 }; // Coordenadas do centro da janela\n\n    // Adiciona as imagens menores ao redor da imagem maior\n    const smallImgPositions = [\n      // Canto superior esquerdo\n      { x: center.x - 350 - smallImgSize, y: center.y - 200 - smallImgSize },\n      // Canto superior direito\n      { x: center.x + 590 - smallImgSize, y: center.y - 120 - smallImgSize },\n      // Canto inferior direito\n      { x: center.x + 650 - smallImgSize, y: center.y + 180 },\n      // Canto inferior esquerdo\n      { x: center.x - 420 - smallImgSize, y: center.y + 260 },\n    ];\n\n    const smallImages = smallImgPositions.map((position, index) => (\n      <img\n        key={index}\n        src={Avatar}\n        className=\"small-image\"\n        style={{\n          width: `${smallImgSize}px`,\n          height: `${smallImgSize}px`,\n          left: `${position.x}px`,\n          top: `${position.y}px`,\n        }}\n        alt=\"Small Avatar\"\n      />\n    ));\n\n    return smallImages;\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({ prompt: input });\n\n    response = response.data.split(\"\\n\").map((line) => <p>{line}</p>);\n\n    setChatLog([\n      ...chatLog,\n      {\n        user: \"me\",\n        message: `${input}`,\n      },\n      {\n        user: \"gpt\",\n        message: response,\n      },\n    ]);\n\n    setInput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <SideMenu></SideMenu>\n      <div className=\"background-container\">\n        {renderSmallImages()} {/* Renderiza as imagens pequenas */}\n        <img src={Avatar} className=\"avatar-image\" alt=\"Avatar\" />\n      </div>\n      <section className=\"chatbox\">\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n        </div>\n        <div className=\"chat-input-holder\">\n          <form onSubmit={handleSubmit}>\n            <input\n              rows=\"1\"\n              className=\"chat-input-textarea\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n            ></input>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}