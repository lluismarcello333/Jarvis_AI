{"ast":null,"code":"import axios from 'axios';\nconst URL_API = 'http://localhost:/api/prompt';\nexport const makeRequest = async message => {\n  try {\n    const {\n      data\n    } = await axios.post(URL_API, message);\n    return data;\n  } catch (error) {\n    // Se ocorrer um erro durante a solicitação, o Axios irá lançar uma exceção que será capturada aqui\n    if (error.response) {\n      // O servidor retornou um status de erro (por exemplo, 4xx, 5xx)\n      console.error('Erro de resposta do servidor:', error.response.data);\n      return error.response.data;\n    } else if (error.request) {\n      // A solicitação foi feita, mas não houve resposta do servidor\n      console.error('Sem resposta do servidor:', error.request);\n      return {\n        error: 'Sem resposta do servidor'\n      };\n    } else {\n      // Ocorreu um erro durante a configuração da solicitação\n      console.error('Erro ao configurar a solicitação:', error.message);\n      return {\n        error: 'Erro ao configurar a solicitação'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","URL_API","makeRequest","message","data","post","error","response","console","request"],"sources":["/home/luiz/Documentos/projects/my-chat-gpt/web/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst URL_API = 'http://localhost:/api/prompt';\n\nexport const makeRequest = async (message) => {\n    try {\n        const { data } = await axios.post(URL_API, message);\n        return data;\n    } catch (error) {\n        // Se ocorrer um erro durante a solicitação, o Axios irá lançar uma exceção que será capturada aqui\n        if (error.response) {\n            // O servidor retornou um status de erro (por exemplo, 4xx, 5xx)\n            console.error('Erro de resposta do servidor:', error.response.data);\n            return error.response.data;\n        } else if (error.request) {\n            // A solicitação foi feita, mas não houve resposta do servidor\n            console.error('Sem resposta do servidor:', error.request);\n            return { error: 'Sem resposta do servidor' };\n        } else {\n            // Ocorreu um erro durante a configuração da solicitação\n            console.error('Erro ao configurar a solicitação:', error.message);\n            return { error: 'Erro ao configurar a solicitação' };\n        }\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B;AAE9C,OAAO,MAAMC,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC1C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,EAAEE,OAAO,CAAC;IACnD,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ;IACA,IAAIA,KAAK,CAACC,QAAQ,EAAE;MAChB;MACAC,OAAO,CAACF,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACC,QAAQ,CAACH,IAAI,CAAC;MACnE,OAAOE,KAAK,CAACC,QAAQ,CAACH,IAAI;IAC9B,CAAC,MAAM,IAAIE,KAAK,CAACG,OAAO,EAAE;MACtB;MACAD,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACG,OAAO,CAAC;MACzD,OAAO;QAAEH,KAAK,EAAE;MAA2B,CAAC;IAChD,CAAC,MAAM;MACH;MACAE,OAAO,CAACF,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACH,OAAO,CAAC;MACjE,OAAO;QAAEG,KAAK,EAAE;MAAmC,CAAC;IACxD;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}