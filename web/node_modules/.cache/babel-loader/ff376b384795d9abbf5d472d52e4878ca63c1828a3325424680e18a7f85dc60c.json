{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/my-chat-gpt/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\nimport { makeRequest } from \"./api/api\";\nimport { SideMenu } from \"./components/SideMenu/SideMenu\";\nimport { ChatMessage } from \"./components/ChatMessage/ChatMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      const response = await makeRequest({\n        prompt: input\n      });\n      if (response && response.data) {\n        const responseData = response.data.split(\"\\n\");\n        setChatlog(prevChatlog => [...prevChatlog, {\n          user: \"me\",\n          message: input\n        }, {\n          user: \"gpt\",\n          message: response\n        }]);\n        setInput(\"\");\n      } else {\n        console.error(\"Resposta inválida:\", response);\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer solicitação:\", error);\n      // Adicione tratamento de erro aqui, se necessário\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_log\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_input_holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat_input_textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DaClfUWzFegei4ObChdLkZkrGeQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatlog","user","message","handleSubmit","e","preventDefault","response","prompt","data","responseData","split","prevChatlog","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/my-chat-gpt/web/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\n\nimport { makeRequest } from \"./api/api\";\nimport { SideMenu } from \"./components/SideMenu/SideMenu\";\nimport { ChatMessage } from \"./components/ChatMessage/ChatMessage\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([\n    {\n      user: \"gpt\",\n      message: \"Como posso te ajudar hoje?\",\n    },\n  ]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      const response = await makeRequest({ prompt: input });\n      if (response && response.data) {\n        const responseData = response.data.split(\"\\n\");\n  \n        setChatlog(prevChatlog => [\n          ...prevChatlog,\n          {\n            user: \"me\",\n            message: input,\n          },\n          {\n            user: \"gpt\",\n            message: response,\n          },\n        ]);\n  \n        setInput(\"\");\n      } else {\n        console.error(\"Resposta inválida:\", response);\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer solicitação:\", error);\n      // Adicione tratamento de erro aqui, se necessário\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <SideMenu />\n      <section className=\"chatbox\">\n        <div className=\"chat_log\">\n          {chatlog.map((message, index) => (\n            <ChatMessage key={index} message={message} \n            />\n          ))}\n        </div>\n        <div className=\"chat_input_holder\">\n          <form onSubmit={handleSubmit}>\n            <input\n              rows=\"1\"\n              className=\"chat_input_textarea\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n            />\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}