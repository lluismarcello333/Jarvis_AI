{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/components/ChatMessage/ChatMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChatMessage.css\";\nimport Avatar from \"../../assets/icons/iconJarvis.png\";\nimport UserAvatar from \"../../assets/icons/Iron_Man.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatMessage = ({\n  message\n}) => {\n  _s();\n  const [newMessage, setNewMessage] = useState(false);\n  useEffect(() => {\n    if (message.user === \"gpt\") {\n      const timeoutId = setTimeout(() => {\n        setNewMessage(true);\n      }, 100);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [message.user]);\n  const handleSpeakMessage = () => {\n    if ('speechSynthesis' in window) {\n      const speech = new SpeechSynthesisUtterance(message.message);\n      window.speechSynthesis.speak(speech);\n    } else {\n      console.log('Text-to-Speech is not supported in this browser.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user === 'gpt' ? \"chatgpt\" : \"user\"} ${newMessage ? \"new-message\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: message.user === \"gpt\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.user === 'gpt' ? \"white-text align-right\" : \"black-text align-left\"}`,\n          children: [message.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSpeakMessage,\n            children: \"Falar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${message.user === 'gpt' ? \"chatgpt\" : \"user\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Avatar,\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${message.user === 'gpt' ? \"chatgpt\" : \"user\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: UserAvatar,\n            alt: \"User Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.user === 'gpt' ? \"white-text\" : \"black-text\"}`,\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatMessage, \"3fi6pb8VlTLoHBhTHc8Vw1uEykE=\");\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","useEffect","useState","Avatar","UserAvatar","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatMessage","message","_s","newMessage","setNewMessage","user","timeoutId","setTimeout","clearTimeout","handleSpeakMessage","window","speech","SpeechSynthesisUtterance","speechSynthesis","speak","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/components/ChatMessage/ChatMessage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChatMessage.css\";\nimport Avatar from \"../../assets/icons/iconJarvis.png\";\nimport UserAvatar from \"../../assets/icons/Iron_Man.png\";\n\nconst ChatMessage = ({ message }) => {\n  const [newMessage, setNewMessage] = useState(false);\n\n  useEffect(() => {\n    if (message.user === \"gpt\") {\n      const timeoutId = setTimeout(() => {\n        setNewMessage(true);\n      }, 100);\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [message.user]);\n\n  const handleSpeakMessage = () => {\n    if ('speechSynthesis' in window) {\n      const speech = new SpeechSynthesisUtterance(message.message);\n      window.speechSynthesis.speak(speech);\n    } else {\n      console.log('Text-to-Speech is not supported in this browser.');\n    }\n  };\n\n  return (\n    <div className={`chat-message ${message.user === 'gpt' ? \"chatgpt\" : \"user\"} ${newMessage ? \"new-message\" : \"\"}`}>\n      <div className='chat-message-center'>\n        {message.user === \"gpt\" ? (\n          <>\n            <div className={`message ${message.user === 'gpt' ? \"white-text align-right\" : \"black-text align-left\"}`}>\n              {message.message}\n              <button onClick={handleSpeakMessage}>Falar</button>\n            </div>\n            <div className={`avatar ${message.user === 'gpt' ? \"chatgpt\" : \"user\"}`}>\n              <img src={Avatar} alt=\"Avatar\" />\n            </div>\n          </>\n        ) : (\n          <>\n            <div className={`avatar ${message.user === 'gpt' ? \"chatgpt\" : \"user\"}`}>\n              <img src={UserAvatar} alt=\"User Avatar\" />\n            </div>\n            <div className={`message ${message.user === 'gpt' ? \"white-text\" : \"black-text\"}`}>\n              {message.message}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}