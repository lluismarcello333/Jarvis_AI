{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/components/ChatMessage/ChatMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChatMessage.css\";\nimport Avatar from \"../../assets/icons/iconJarvis.png\";\nimport UserAvatar from \"../../assets/icons/Iron_Man.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessage = ({\n  message\n}) => {\n  _s();\n  const [newMessage, setNewMessage] = useState(false);\n  useEffect(() => {\n    // Atualizar o estado newMessage apenas para mensagens do servidor\n    if (message.user === \"gpt\") {\n      const timeoutId = setTimeout(() => {\n        setNewMessage(true);\n      }, 100); // Ajuste conforme necessário\n\n      return () => clearTimeout(timeoutId); // Limpar o timeout quando o componente for desmontado\n    }\n  }, [message.user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${message.user}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.user === \"gpt\" ? Avatar : UserAvatar,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatMessage, \"3fi6pb8VlTLoHBhTHc8Vw1uEykE=\");\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","useEffect","useState","Avatar","UserAvatar","jsxDEV","_jsxDEV","ChatMessage","message","_s","newMessage","setNewMessage","user","timeoutId","setTimeout","clearTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/components/ChatMessage/ChatMessage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChatMessage.css\";\nimport Avatar from \"../../assets/icons/iconJarvis.png\";\nimport UserAvatar from \"../../assets/icons/Iron_Man.png\";\n\nconst ChatMessage = ({ message }) => {\n  const [newMessage, setNewMessage] = useState(false);\n\n  useEffect(() => {\n    // Atualizar o estado newMessage apenas para mensagens do servidor\n    if (message.user === \"gpt\") {\n      const timeoutId = setTimeout(() => {\n        setNewMessage(true);\n      }, 100); // Ajuste conforme necessário\n\n      return () => clearTimeout(timeoutId); // Limpar o timeout quando o componente for desmontado\n    }\n  }, [message.user]);\n\n  return (\n    <div className={`chat-message ${message.user}`}>\n      <div className='chat-message-center'>\n        <div className={`avatar ${message.user}`}>\n          <img src={message.user === \"gpt\" ? Avatar : UserAvatar} alt=\"Avatar\" />\n        </div>\n        <div className=\"message\">\n          {message.message}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,mCAAmC;AACtD,OAAOC,UAAU,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,OAAO,CAACI,IAAI,KAAK,KAAK,EAAE;MAC1B,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;QACjCH,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;MAET,OAAO,MAAMI,YAAY,CAACF,SAAS,CAAC,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACL,OAAO,CAACI,IAAI,CAAC,CAAC;EAElB,oBACEN,OAAA;IAAKU,SAAS,EAAG,gBAAeR,OAAO,CAACI,IAAK,EAAE;IAAAK,QAAA,eAC7CX,OAAA;MAAKU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCX,OAAA;QAAKU,SAAS,EAAG,UAASR,OAAO,CAACI,IAAK,EAAE;QAAAK,QAAA,eACvCX,OAAA;UAAKY,GAAG,EAAEV,OAAO,CAACI,IAAI,KAAK,KAAK,GAAGT,MAAM,GAAGC,UAAW;UAACe,GAAG,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eACNjB,OAAA;QAAKU,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrBT,OAAO,CAACA;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA1BIF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}