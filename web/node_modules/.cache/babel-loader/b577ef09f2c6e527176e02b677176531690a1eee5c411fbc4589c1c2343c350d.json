{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Avatar from \"../src/assets/staticJarvis.png\";\nimport { makeRequest } from \"./api/api\";\nimport ChatMessage from \"./components/ChatMessage/ChatMessage\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split(\"\\n\").map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 56\n    }, this));\n    setChatLog([...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }, {\n      user: \"gpt\",\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      renderSmallImages();\n    }, 10000); // Define o intervalo de tempo para renderizar as imagens (em milissegundos)\n\n    return () => clearInterval(intervalId);\n  }, []); // Executa somente uma vez quando o componente é montado\n\n  function renderSmallImages() {\n    const container = document.querySelector(\".small-images-container\");\n    const containerWidth = container.offsetWidth;\n    const containerHeight = container.offsetHeight;\n    const images = container.querySelectorAll(\".small-image\");\n\n    // Atualiza a posição de cada imagem\n    images.forEach(img => {\n      // Define novas posições aleatórias para as imagens\n      const randomX = Math.floor(Math.random() * containerWidth);\n      const randomY = Math.floor(Math.random() * containerHeight);\n    });\n\n    // Remova as transições após um segundo para evitar que interfiram na próxima atualização de posição\n    setTimeout(() => {\n      images.forEach(img => {\n        img.style.transition = \"none\"; // Remove a transição\n      });\n    }, 1000);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"small-images-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AREbB0u5FNbD7XPvRMWIQYZNIJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Avatar","makeRequest","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatLog","setChatLog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","intervalId","setInterval","renderSmallImages","clearInterval","container","document","querySelector","containerWidth","offsetWidth","containerHeight","offsetHeight","images","querySelectorAll","forEach","img","randomX","Math","floor","random","randomY","setTimeout","style","transition","className","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Avatar from \"../src/assets/staticJarvis.png\";\nimport { makeRequest } from \"./api/api\";\nimport ChatMessage from \"./components/ChatMessage/ChatMessage\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([\n    {\n      user: \"gpt\",\n      message: \"Como posso te ajudar hoje?\",\n    },\n  ]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    let response = await makeRequest({ prompt: input });\n\n    response = response.data.split(\"\\n\").map((line) => <p>{line}</p>);\n\n    setChatLog([\n      ...chatLog,\n      { user: \"me\", message: `${input}` },\n      { user: \"gpt\", message: response },\n    ]);\n    setInput(\"\");\n  }\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n     \n      renderSmallImages();\n    }, 10000); // Define o intervalo de tempo para renderizar as imagens (em milissegundos)\n\n    return () => clearInterval(intervalId);\n  }, []); // Executa somente uma vez quando o componente é montado\n\nfunction renderSmallImages() {\n  const container = document.querySelector(\".small-images-container\");\n  const containerWidth = container.offsetWidth;\n  const containerHeight = container.offsetHeight;\n  const images = container.querySelectorAll(\".small-image\");\n  \n  // Atualiza a posição de cada imagem\n  images.forEach((img) => {\n    // Define novas posições aleatórias para as imagens\n    const randomX = Math.floor(Math.random() * containerWidth);\n    const randomY = Math.floor(Math.random() * containerHeight);\n\n  });\n\n  // Remova as transições após um segundo para evitar que interfiram na próxima atualização de posição\n  setTimeout(() => {\n    images.forEach((img) => {\n      img.style.transition = \"none\"; // Remove a transição\n    });\n  }, 1000);\n}\n\n  \n  \n  \n\n  return (\n    <div className=\"App\">\n      {/* <SideMenu></SideMenu> */}\n      <section className=\"chatbox\">\n        <div className=\"chat-log\">\n          {chatLog.map((message, index) => (\n            <ChatMessage key={index} message={message} />\n          ))}\n        </div>\n\n        <div className=\"chat-input-holder\">\n          <form onSubmit={handleSubmit}>\n            <input\n              rows=\"1\"\n              className=\"chat-input-textarea\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            ></input>\n          </form>\n        </div>\n      </section>\n\n      <div className=\"small-images-container\"></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}