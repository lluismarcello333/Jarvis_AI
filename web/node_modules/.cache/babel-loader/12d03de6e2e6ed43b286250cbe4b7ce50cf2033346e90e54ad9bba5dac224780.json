{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Avatar from \"./assets/staticJarvis.png\";\nimport { makeRequest } from \"./api/api\";\nimport ChatMessage from \"./components/ChatMessage/ChatMessage\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split(\"\\n\").map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 56\n    }, this));\n    setChatLog([...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }, {\n      user: \"gpt\",\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      renderSmallImages();\n    }, 10000); // Defina o intervalo de tempo para renderizar as imagens (em milissegundos)\n\n    return () => clearInterval(intervalId);\n  }, []); // Executa somente uma vez quando o componente é montado\n\n  function renderSmallImages() {\n    const container = document.querySelector(\".small-images-container\");\n    container.innerHTML = \"\"; // Limpa o conteúdo anterior\n\n    const containerWidth = container.offsetWidth;\n    const containerHeight = container.offsetHeight;\n    const center = {\n      x: containerWidth / 2,\n      y: containerHeight / 2\n    }; // Coordenadas do centro do container\n\n    // Adiciona a imagem maior no centro\n    const bigImg = document.createElement(\"img\");\n    bigImg.src = Avatar;\n    bigImg.classList.add(\"big-image\");\n    bigImg.style.width = \"600px\"; // Define a largura da imagem maior\n    bigImg.style.height = \"600px\"; // Define a altura da imagem maior\n    bigImg.style.left = `${center.x - 350}px`; // Posiciona a imagem no centro horizontalmente\n    bigImg.style.top = `${center.y - 350}px`; // Posiciona a imagem no centro verticalmente\n    container.appendChild(bigImg);\n\n    // Adiciona as imagens menores ao redor da imagem maior\n    const smallImgSize = 150; // Tamanho das imagens menores\n    const smallImgPositions = [{\n      x: center.x - smallImgSize / 2,\n      y: center.y - 350 - smallImgSize\n    },\n    // Acima da imagem maior\n    {\n      x: center.x + 350 - smallImgSize,\n      y: center.y - smallImgSize / 2\n    },\n    // À direita da imagem maior\n    {\n      x: center.x - smallImgSize / 2,\n      y: center.y + 350\n    },\n    // Abaixo da imagem maior\n    {\n      x: center.x - 350 - smallImgSize,\n      y: center.y - smallImgSize / 2\n    } // À esquerda da imagem maior\n    ];\n    smallImgPositions.forEach(position => {\n      const smallImg = document.createElement(\"img\");\n      smallImg.src = Avatar;\n      smallImg.classList.add(\"small-image\");\n      smallImg.style.width = `${smallImgSize}px`; // Define a largura das imagens menores\n      smallImg.style.height = `${smallImgSize}px`; // Define a altura das imagens menores\n      smallImg.style.left = `${position.x}px`; // Posiciona a imagem menor horizontalmente\n      smallImg.style.top = `${position.y}px`; // Posiciona a imagem menor verticalmente\n      container.appendChild(smallImg);\n    });\n\n    // Adiciona uma pequena pausa antes de remover as imagens\n    setTimeout(() => {\n      // Gradualmente diminui a opacidade das imagens para que pareçam desaparecer suavemente\n      const images = container.querySelectorAll(\".small-image, .big-image\");\n      images.forEach(img => {\n        img.style.opacity = 0;\n      });\n\n      // Remove as imagens após a transição de opacidade\n      setTimeout(() => {\n        container.innerHTML = \"\"; // Limpa o conteúdo\n      }, 1000); // Ajuste conforme a duração da transição de opacidade (em milissegundos)\n    }, 9000); // Ajuste conforme necessário para dar tempo suficiente para a renderização das imagens\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-images-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Avatar,\n        className: \"avatar-image\",\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AREbB0u5FNbD7XPvRMWIQYZNIJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Avatar","makeRequest","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatLog","setChatLog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","intervalId","setInterval","renderSmallImages","clearInterval","container","document","querySelector","innerHTML","containerWidth","offsetWidth","containerHeight","offsetHeight","center","x","y","bigImg","createElement","src","classList","add","style","width","height","left","top","appendChild","smallImgSize","smallImgPositions","forEach","position","smallImg","setTimeout","images","querySelectorAll","img","opacity","className","alt","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/J-A-R-V-I-S/web/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Avatar from \"./assets/staticJarvis.png\";\nimport { makeRequest } from \"./api/api\";\nimport ChatMessage from \"./components/ChatMessage/ChatMessage\";\nimport \"./styles/App.css\";\nimport \"./styles/reset.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [chatLog, setChatLog] = useState([\n    {\n      user: \"gpt\",\n      message: \"Como posso te ajudar hoje?\",\n    },\n  ]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    let response = await makeRequest({ prompt: input });\n\n    response = response.data.split(\"\\n\").map((line) => <p>{line}</p>);\n\n    setChatLog([\n      ...chatLog,\n      { user: \"me\", message: `${input}` },\n      { user: \"gpt\", message: response },\n    ]);\n    setInput(\"\");\n  }\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      renderSmallImages();\n    }, 10000); // Defina o intervalo de tempo para renderizar as imagens (em milissegundos)\n\n    return () => clearInterval(intervalId);\n  }, []); // Executa somente uma vez quando o componente é montado\n\n  function renderSmallImages() {\n    const container = document.querySelector(\".small-images-container\");\n    container.innerHTML = \"\"; // Limpa o conteúdo anterior\n  \n    const containerWidth = container.offsetWidth;\n    const containerHeight = container.offsetHeight;\n    const center = { x: containerWidth / 2, y: containerHeight / 2 }; // Coordenadas do centro do container\n  \n    // Adiciona a imagem maior no centro\n    const bigImg = document.createElement(\"img\");\n    bigImg.src = Avatar;\n    bigImg.classList.add(\"big-image\");\n    bigImg.style.width = \"600px\"; // Define a largura da imagem maior\n    bigImg.style.height = \"600px\"; // Define a altura da imagem maior\n    bigImg.style.left = `${center.x - 350}px`; // Posiciona a imagem no centro horizontalmente\n    bigImg.style.top = `${center.y - 350}px`; // Posiciona a imagem no centro verticalmente\n    container.appendChild(bigImg);\n  \n    // Adiciona as imagens menores ao redor da imagem maior\n    const smallImgSize = 150; // Tamanho das imagens menores\n    const smallImgPositions = [\n      { x: center.x - smallImgSize / 2, y: center.y - 350 - smallImgSize }, // Acima da imagem maior\n      { x: center.x + 350 - smallImgSize, y: center.y - smallImgSize / 2 }, // À direita da imagem maior\n      { x: center.x - smallImgSize / 2, y: center.y + 350 }, // Abaixo da imagem maior\n      { x: center.x - 350 - smallImgSize, y: center.y - smallImgSize / 2 }, // À esquerda da imagem maior\n    ];\n  \n    smallImgPositions.forEach((position) => {\n      const smallImg = document.createElement(\"img\");\n      smallImg.src = Avatar;\n      smallImg.classList.add(\"small-image\");\n      smallImg.style.width = `${smallImgSize}px`; // Define a largura das imagens menores\n      smallImg.style.height = `${smallImgSize}px`; // Define a altura das imagens menores\n      smallImg.style.left = `${position.x}px`; // Posiciona a imagem menor horizontalmente\n      smallImg.style.top = `${position.y}px`; // Posiciona a imagem menor verticalmente\n      container.appendChild(smallImg);\n    });\n  \n    // Adiciona uma pequena pausa antes de remover as imagens\n    setTimeout(() => {\n      // Gradualmente diminui a opacidade das imagens para que pareçam desaparecer suavemente\n      const images = container.querySelectorAll(\".small-image, .big-image\");\n      images.forEach((img) => {\n        img.style.opacity = 0;\n      });\n  \n      // Remove as imagens após a transição de opacidade\n      setTimeout(() => {\n        container.innerHTML = \"\"; // Limpa o conteúdo\n      }, 1000); // Ajuste conforme a duração da transição de opacidade (em milissegundos)\n    }, 9000); // Ajuste conforme necessário para dar tempo suficiente para a renderização das imagens\n  }\n  \n  return (\n    <div className=\"App\">\n    <div className=\"background-container\">\n      <div className=\"small-images-container\"></div>\n      <img src={Avatar} className=\"avatar-image\" alt=\"Avatar\" />\n    </div>\n    <section className=\"chatbox\">\n      <div className=\"chat-log\">\n        {chatLog.map((message, index) => (\n          <ChatMessage key={index} message={message} />\n        ))}\n      </div>\n      <div className=\"chat-input-holder\">\n        <form onSubmit={handleSubmit}>\n          <input\n            rows=\"1\"\n            className=\"chat-input-textarea\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          ></input>\n        </form>\n      </div>\n    </section>\n  </div>\n  \n  );\n  \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}